{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nexport default function ChatlistScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      atividade = _useState2[0],\n      setAtividade = _useState2[1];\n\n  useEffect(function () {\n    function getData() {\n      var response, atividade;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://mobile.ect.ufrn.br:3002/emails'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              atividade = _context.sent;\n              setAtividade(atividade);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getData();\n  }, []);\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      style: styles.chat,\n      onPress: function onPress() {\n        return navigation.navigate('ChatScreen', {\n          id: item.id\n        });\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: {\n        uri: item.picture\n      }\n    }), React.createElement(View, {\n      style: styles.box\n    }, React.createElement(View, {\n      style: styles.box1\n    }, React.createElement(Text, {\n      style: styles.destinatarios\n    }, item.to), React.createElement(Text, {\n      style: styles.destinatarios\n    }, item.tittle), React.createElement(Text, {\n      style: styles.destinatarios\n    }, item.summary)), React.createElement(View, null, React.createElement(Text, {\n      style: styles.horario\n    }, \" \", React.createElement(FontAwesome5, {\n      name: \"paperclip\",\n      size: 16,\n      color: \"black\"\n    }), item.time), React.createElement(FontAwesome5, {\n      style: item.star ? styles.favorito1 : styles.favorito,\n      name: \"star\",\n      size: 16\n    }))));\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(StatusBar, {\n    style: \"auto\"\n  }), React.createElement(FlatList, {\n    data: atividade,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    showsHorizontalScrollIndicator: false\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  chat: {\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: '#fff'\n  },\n  image: {\n    height: 50,\n    width: 50,\n    margin: 5,\n    borderRadius: 25\n  },\n  box: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 5\n  },\n  box1: {},\n  destinatarios: {\n    fontWeight: 'bold'\n  },\n  horario: {},\n  favorito: {\n    color: \"black\"\n  },\n  favorito1: {\n    color: \"blue\"\n  }\n});","map":{"version":3,"sources":["C:/Users/thiag/apps/primeiroapp/screens/atividade.js"],"names":["StatusBar","React","useEffect","useState","FontAwesome5","ChatlistScreen","navigation","atividade","setAtividade","getData","fetch","response","json","renderItem","item","styles","chat","navigate","id","image","uri","picture","box","box1","destinatarios","to","tittle","summary","horario","time","star","favorito1","favorito","container","StyleSheet","create","flex","backgroundColor","height","flexDirection","width","margin","borderRadius","justifyContent","padding","fontWeight","color"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, View, Text, FlatList, Image, TouchableOpacity } from \"react-native\";\r\nimport {FontAwesome5} from '@expo/vector-icons';\r\n\r\nexport default function ChatlistScreen({navigation}){\r\n    const [atividade, setAtividade] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        async function getData(){\r\n            const response = await fetch('https://mobile.ect.ufrn.br:3002/emails')\r\n            const atividade = await response.json();\r\n            setAtividade(atividade);\r\n        }\r\n        getData();\r\n    },[]);\r\n\r\n    function renderItem({item}){\r\n        return (\r\n            <TouchableOpacity style={styles.chat} onPress={()=> navigation.navigate('ChatScreen', {id: item.id})}>\r\n            <Image style={styles.image} source={{uri: item.picture}}/>\r\n            <View style={styles.box}>\r\n                <View style={styles.box1}>\r\n                    <Text style={styles.destinatarios}>{item.to}</Text>\r\n                    <Text style={styles.destinatarios}>{item.tittle}</Text>\r\n                    <Text style={styles.destinatarios}>{item.summary}</Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.horario}> <FontAwesome5 name=\"paperclip\" size={16} color=\"black\"/>{item.time}</Text>\r\n                    <FontAwesome5 style={item.star? styles.favorito1 : styles.favorito} name=\"star\" size={16}/>\r\n                </View>\r\n            </View>\r\n        </TouchableOpacity>\r\n        );\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <StatusBar style=\"auto\"/>\r\n            <FlatList\r\n                data={atividade}\r\n                renderItem={renderItem}\r\n                keyExtractor={item=>item.id}\r\n                showsHorizontalScrollIndicator={false}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        backgroundColor: '#fff',\r\n        \r\n    },\r\n    chat:{\r\n        height: 60,\r\n        flexDirection: 'row',\r\n        backgroundColor: '#fff',\r\n    },\r\n    image:{\r\n        height:50,\r\n        width:50,\r\n        margin:5,\r\n        borderRadius:25,\r\n    },\r\n    box:{\r\n        flex:1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        padding: 5,\r\n    },\r\n    box1:{\r\n        \r\n    },\r\n    destinatarios:{\r\n        fontWeight: 'bold',\r\n        \r\n    },\r\n    horario:{\r\n        \r\n        \r\n    },\r\n    favorito:{\r\n        color:\"black\",\r\n    },\r\n    favorito1:{\r\n        color:\"blue\",\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}