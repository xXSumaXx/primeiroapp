{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport default function ChatlistScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatlist = _useState2[0],\n      setChatlist = _useState2[1];\n\n  useEffect(function () {\n    function getData() {\n      var response, chatlist;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://mobile.ect.ufrn.br:3000/chatlist'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              chatlist = _context.sent;\n              setChatlist(chatlist);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getData();\n  }, []);\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      style: styles.chat,\n      onPress: function onPress() {\n        return navigation.navigate('ChatScreen', {\n          id: item.id\n        });\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: {\n        uri: item.imgPerfilUri\n      }\n    }), React.createElement(View, {\n      style: styles.box\n    }, React.createElement(Text, {\n      style: styles.nome\n    }, item.nomeUsuario), React.createElement(Text, null, item.ultimaMensagem)));\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(StatusBar, {\n    style: \"auto\"\n  }), React.createElement(FlatList, {\n    data: chatlist,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    showsHorizontalScrollIndicator: false\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  chat: {\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'red'\n  },\n  image: {\n    height: 50,\n    width: 50,\n    margin: 5,\n    borderRadius: 25\n  },\n  box: {\n    justifyContent: 'center'\n  },\n  nome: {\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/thiag/apps/primeiroapp/screens/ChatlistScreen.js"],"names":["StatusBar","React","useEffect","useState","ChatlistScreen","navigation","chatlist","setChatlist","getData","fetch","response","json","renderItem","item","styles","chat","navigate","id","image","uri","imgPerfilUri","box","nome","nomeUsuario","ultimaMensagem","container","StyleSheet","create","flex","backgroundColor","height","flexDirection","width","margin","borderRadius","justifyContent","fontWeight"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAGA,eAAe,SAASC,cAAT,OAAqC;AAAA,MAAZC,UAAY,QAAZA,UAAY;;AAChD,kBAAgCF,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AAEAL,EAAAA,SAAS,CAAC,YAAI;AACV,aAAeM,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC2BC,KAAK,CAAC,0CAAD,CADhC;;AAAA;AACUC,cAAAA,QADV;AAAA;AAAA,+CAE2BA,QAAQ,CAACC,IAAT,EAF3B;;AAAA;AAEUL,cAAAA,QAFV;AAGIC,cAAAA,WAAW,CAACD,QAAD,CAAX;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAE,IAAAA,OAAO;AACV,GAPQ,EAOP,EAPO,CAAT;;AASA,WAASI,UAAT,QAA2B;AAAA,QAANC,IAAM,SAANA,IAAM;AACvB,WAAO,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEC,MAAM,CAACC,IAAhC;AAAsC,MAAA,OAAO,EAAE;AAAA,eAAKV,UAAU,CAACW,QAAX,CAAoB,YAApB,EAAkC;AAACC,UAAAA,EAAE,EAAEJ,IAAI,CAACI;AAAV,SAAlC,CAAL;AAAA;AAA/C,OACH,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEH,MAAM,CAACI,KAArB;AAA4B,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAEN,IAAI,CAACO;AAAX;AAApC,MADG,EAEH,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACO;AAApB,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACQ;AAApB,OAA2BT,IAAI,CAACU,WAAhC,CADJ,EAEI,oBAAC,IAAD,QAAOV,IAAI,CAACW,cAAZ,CAFJ,CAFG,CAAP;AAOH;;AACD,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW;AAApB,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,IADJ,EAEI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEnB,QADV;AAEI,IAAA,UAAU,EAAEM,UAFhB;AAGI,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAEA,IAAI,CAACI,EAAP;AAAA,KAHtB;AAII,IAAA,8BAA8B,EAAE;AAJpC,IAFJ,CADJ;AAWH;AAED,IAAMH,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAC;AACNG,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,eAAe,EAAE;AAFX,GADmB;AAK7Bd,EAAAA,IAAI,EAAC;AACDe,IAAAA,MAAM,EAAE,EADP;AAEDC,IAAAA,aAAa,EAAE,KAFd;AAGDF,IAAAA,eAAe,EAAE;AAHhB,GALwB;AAU7BX,EAAAA,KAAK,EAAC;AACFY,IAAAA,MAAM,EAAC,EADL;AAEFE,IAAAA,KAAK,EAAC,EAFJ;AAGFC,IAAAA,MAAM,EAAC,CAHL;AAIFC,IAAAA,YAAY,EAAC;AAJX,GAVuB;AAgB7Bb,EAAAA,GAAG,EAAC;AACAc,IAAAA,cAAc,EAAE;AADhB,GAhByB;AAmB7Bb,EAAAA,IAAI,EAAC;AACDc,IAAAA,UAAU,EAAE;AADX;AAnBwB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, View, Text, FlatList, Image, TouchableOpacity } from \"react-native\";\r\n\r\nexport default function ChatlistScreen({navigation}){\r\n    const [chatlist, setChatlist] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        async function getData(){\r\n            const response = await fetch('https://mobile.ect.ufrn.br:3000/chatlist')\r\n            const chatlist = await response.json();\r\n            setChatlist(chatlist);\r\n        }\r\n        getData();\r\n    },[]);\r\n\r\n    function renderItem({item}){\r\n        return <TouchableOpacity style={styles.chat} onPress={()=> navigation.navigate('ChatScreen', {id: item.id})}>\r\n            <Image style={styles.image} source={{uri: item.imgPerfilUri}}/>\r\n            <View style={styles.box}>\r\n                <Text style={styles.nome}>{item.nomeUsuario}</Text>\r\n                <Text>{item.ultimaMensagem}</Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <StatusBar style=\"auto\"/>\r\n            <FlatList\r\n                data={chatlist}\r\n                renderItem={renderItem}\r\n                keyExtractor={item=>item.id}\r\n                showsHorizontalScrollIndicator={false}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n    },\r\n    chat:{\r\n        height: 60,\r\n        flexDirection: 'row',\r\n        backgroundColor: 'red',\r\n    },\r\n    image:{\r\n        height:50,\r\n        width:50,\r\n        margin:5,\r\n        borderRadius:25,\r\n    },\r\n    box:{\r\n        justifyContent: 'center',\r\n    },\r\n    nome:{ \r\n        fontWeight: 'bold',\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}